{"version":3,"sources":["components/CustomSignIn.jsx","components/CustomHeader.jsx","components/CustomSubHeader.jsx","helpers/localStorage.jsx","service/signInService.jsx","pages/SignIn.jsx","components/CustomMessage.jsx","components/CustomSignUp.jsx","service/signUpService.jsx","pages/SignUp.jsx","components/CustomFeed.jsx","service/feedService.jsx","pages/Feed.jsx","service/ReactionsService.jsx","components/CustomAllFeed.jsx","service/allFeedService.jsx","pages/AllFeed.jsx","components/CustomForgotPassword.jsx","service/forgotPasswordService.jsx","pages/ForgotPassword.jsx","PrivateRouter.jsx","Routes.jsx","context/Context.jsx","context/CentralContextProvider.jsx","App.jsx","index.jsx"],"names":["CustomSignIn","formData","username","password","onInputChange","onHandleSubmit","goRegister","isValid","goForgot","Form","size","Segment","stacked","style","backgroundColor","basic","Input","fluid","icon","iconPosition","placeholder","name","value","onChange","e","type","Button","color","onClick","disabled","inverted","animated","Content","visible","hidden","CustomHeader","message","Container","margin","Header","as","data-testid","textAlign","CustomSubHeader","saveToken","token","localStorage","setItem","JSON","stringify","getToken","parse","getItem","saveUsername","fetchSignIn","a","requestHeader","requestBody","axios","post","res","data","console","error","SignIn","history","useHistory","useState","Map","setFormData","handleInputChange","useCallback","target","prevState","set","handleSubmit","get","push","Grid","height","marginTop","verticalAlign","Column","maxWidth","test","length","CustomMessage","children","Message","compact","CustomSignUp","fetchSignUp","SignUp","to","CustomFeed","content","showUsername","goAllContent","Icon","TextArea","Popup","on","popper","id","zIndex","trigger","fetchFeed","authorization","headers","Feed","feedService","fetchReactions","feedId","like","love","CustomAllFeed","index","item","markedStar","setMarkedmarkedStar","markedHeart","setMarkedHeart","useEffect","Object","entries","slice","map","i","log","markekedReaction","Item","Group","Divider","Extra","marginRight","rotated","fetchAllFeed","AllFeed","allContent","setAllContent","all","allFeed","padding","width","CustomForgotPassword","showPassword","loading","fetchForgotPassword","requestUsername","ForgotPassword","inputEnable","setInputEnable","PrivateRouter","Component","component","rest","render","props","pathname","state","from","location","Routes","exact","path","CentralContext","createContext","CentralContextProvider","isUsernameExist","setIsUsernameExist","Context","Provider","App","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.7006e20b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\n\r\nconst CustomSignIn = ({\r\n  formData: { username, password },\r\n  onInputChange,\r\n  onHandleSubmit,\r\n  goRegister,\r\n  isValid,\r\n  goForgot,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Form size=\"large\">\r\n        <Segment stacked style={{ backgroundColor: 'rgb(33, 33, 33)' }} basic>\r\n          <Form.Input\r\n            fluid\r\n            icon=\"user\"\r\n            iconPosition=\"left\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={(e) => onInputChange(e)}\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            icon=\"lock\"\r\n            iconPosition=\"left\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => onInputChange(e)}\r\n          />\r\n          <Button\r\n            name=\"submitButtom\"\r\n            type=\"submit\"\r\n            color=\"red\"\r\n            fluid\r\n            size=\"large\"\r\n            onClick={() => onHandleSubmit()}\r\n            disabled={isValid()}\r\n          >\r\n            Entrar\r\n          </Button>\r\n        </Segment>\r\n        <Button\r\n          inverted\r\n          color=\"red\"\r\n          onClick={() => goRegister()}\r\n          animated=\"fade\"\r\n        >\r\n          <Button.Content visible>Ainda não tenho conta</Button.Content>\r\n          <Button.Content hidden>Cadastrar</Button.Content>\r\n        </Button>\r\n        <Button inverted color=\"red\" onClick={() => goForgot()} animated=\"fade\">\r\n          <Button.Content visible>Esqueceu a senha ?</Button.Content>\r\n          <Button.Content hidden>Recuperar</Button.Content>\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomSignIn.propTypes = {\r\n  formData: PropTypes.shape({\r\n    username: PropTypes.string,\r\n    password: PropTypes.string,\r\n  }).isRequired,\r\n  onInputChange: PropTypes.func.isRequired,\r\n  isValid: PropTypes.func.isRequired,\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n  goRegister: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CustomSignIn;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Header, Container } from 'semantic-ui-react';\r\n\r\nconst CustomHeader = ({ message }) => (\r\n  <Container style={ { margin: '30px 0' } }>\r\n    <Header as=\"h1\" data-testid=\"top-title\" color=\"red\" textAlign=\"center\">\r\n      {message}\r\n    </Header>\r\n  </Container>\r\n);\r\n\r\nCustomHeader.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n\r\n};\r\n\r\nexport default CustomHeader;\r\n","import React from 'react';\r\nimport { Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CustomSubHeader = ({ message }) => (\r\n  <div>\r\n    <Header color=\"red\" size=\"tiny\">{message}</Header>\r\n  </div>\r\n);\r\n\r\nCustomSubHeader.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CustomSubHeader;\r\n","const saveToken = (token) =>\r\n  localStorage.setItem('token', JSON.stringify(token));\r\n\r\nconst getToken = () => JSON.parse(localStorage.getItem('token'));\r\n\r\nconst saveUsername = (username) =>\r\n  localStorage.setItem('username', JSON.stringify(username));\r\n\r\nconst getUsername = () => JSON.parse(localStorage.getItem('username'));\r\n\r\nexport { getToken, saveToken, saveUsername, getUsername };\r\n","import axios from 'axios';\r\nimport { saveToken } from '../helpers/localStorage';\r\n\r\nexport default async function fetchSignIn(username, password) {\r\n  const requestUserUrl = 'https://segware-book-api.segware.io/api/sign-in';\r\n\r\n  const requestHeader = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n\r\n  const requestBody = {\r\n    username,\r\n    password,\r\n  };\r\n  try {\r\n    const res = await axios.post(requestUserUrl, requestBody, requestHeader);\r\n    const { data } = res;\r\n    if (data) {\r\n      saveToken(data);\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return error.message;\r\n  }\r\n}\r\n","import React, { useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport CustomSignIn from '../components/CustomSignIn';\r\nimport CustomHeader from '../components/CustomHeader';\r\nimport CustomSubHeader from '../components/CustomSubHeader';\r\nimport fetchSignIn from '../service/signInService';\r\nimport { saveUsername } from '../helpers/localStorage';\r\n\r\nfunction SignIn() {\r\n  const history = useHistory();\r\n  const [formData, setFormData] = useState(new Map());\r\n\r\n  const register = () => history.push('/sign-up');\r\n  const forgotPassword = () => history.push('/forgot-password');\r\n  const validate = () => {\r\n    const passLimit = 0;\r\n    const username = formData.get('username');\r\n    const password = formData.get('password');\r\n    if (username) {\r\n      const regexName = /^[A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ ]+$/;\r\n      if (!regexName.test(username)) {\r\n        return true;\r\n      }\r\n    }\r\n    if (!password || password.length <= passLimit) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  const handleInputChange = useCallback(({ target: { name, value } }) => {\r\n    setFormData((prevState) => new Map(prevState).set(name, value));\r\n  }, []);\r\n  const handleSubmit = async () => {\r\n    const username = formData.get('username');\r\n    const password = formData.get('password');\r\n    saveUsername(username)\r\n    await fetchSignIn(username, password);\r\n    history.push('/feed');\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      textAlign=\"center\"\r\n      style={{ height: '115vh', backgroundColor: 'rgb(33, 33, 33)', marginTop: '-15vh' }}\r\n      verticalAlign=\"middle\"\r\n    >\r\n      <Grid.Column style={{ maxWidth: 500 }}>\r\n        <CustomHeader message=\"SEGWARE\" />\r\n        <CustomSubHeader message=\"LOGIN\" />\r\n\r\n        <CustomSignIn\r\n          formData={formData}\r\n          onInputChange={handleInputChange}\r\n          onHandleSubmit={handleSubmit}\r\n          goRegister={register}\r\n          goForgot={forgotPassword}\r\n          isValid={validate}\r\n        />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nconst CustomMessage = ({ children }) => {\r\n  return (\r\n    <Message compact color=\"red\" style={ { backgroundColor: 'rgb(33, 33, 33)' } }>\r\n      { children }\r\n    </Message>\r\n  );\r\n};\r\n\r\nCustomMessage.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default CustomMessage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst CustomSignUp = ({\r\n  formData: { username, password },\r\n  onInputChange,\r\n  onHandleSubmit,\r\n  isValid,\r\n}) => {\r\n \r\n  return (\r\n    <Form size=\"large\">\r\n      <Segment stacked style={ { backgroundColor: 'rgb(33, 33, 33)' } }>\r\n        <Form.Input\r\n          fluid\r\n          icon=\"user\"\r\n          iconPosition=\"left\"\r\n          placeholder=\"Username\"\r\n          value={ username }\r\n          name=\"username\"\r\n          onChange={ (e) => onInputChange(e) }\r\n        />\r\n        <Form.Input\r\n          fluid\r\n          icon=\"lock\"\r\n          iconPosition=\"left\"\r\n          placeholder=\"Password\"\r\n          value={ password }\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={ (e) => onInputChange(e) }\r\n        />\r\n\r\n        <Button\r\n          color=\"red\"\r\n          fluid\r\n          size=\"large\"\r\n          onClick={ () => onHandleSubmit() }\r\n          disabled={ isValid() }\r\n        >\r\n          Cadastrar\r\n        </Button>\r\n      </Segment>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCustomSignUp.propTypes = {\r\n  formData: PropTypes.shape({\r\n    username: PropTypes.string,\r\n    password: PropTypes.string,\r\n  }).isRequired,\r\n  onInputChange: PropTypes.func.isRequired,\r\n  isValid: PropTypes.func.isRequired,\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\nexport default CustomSignUp;\r\n","import axios from 'axios';\r\n\r\nexport default async function fetchSignUp(username, password) {\r\n  const requestUserUrl = 'https://segware-book-api.segware.io/api/sign-up';\r\n\r\n  const requestHeader = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n\r\n  const requestBody = {\r\n    username,\r\n    password,\r\n  };\r\n  try {\r\n    const res = await axios.post(requestUserUrl, requestBody, requestHeader);\r\n    const { data } = res;\r\n    if (data) {\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n}\r\n","import React, { useState, useCallback } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport CustomMessage from '../components/CustomMessage';\r\nimport CustomHeader from '../components/CustomHeader';\r\nimport CustomSignUp from '../components/CustomSignUp';\r\nimport CustomSubHeader from '../components/CustomSubHeader';\r\nimport fetchSignUp from '../service/signUpService';\r\n\r\nfunction SignUp() {\r\n  const history = useHistory();\r\n  const [formData, setFormData] = useState(new Map());\r\n  const validate = () => {\r\n    const passLimit = 0;\r\n    const username = formData.get('username');\r\n    const password = formData.get('password');\r\n    if (username) {\r\n      const regexName = /^[A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ ]+$/;\r\n      if (!regexName.test(username)) {\r\n        return true;\r\n      }\r\n    }\r\n    if (!password || password.length <= passLimit) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const username = formData.get('username');\r\n    const password = formData.get('password');\r\n    await fetchSignUp(username, password);\r\n    history.push('/sign-in');\r\n  };\r\n\r\n  const handleInputChange = useCallback(({ target: { name, value } }) => {\r\n    setFormData((prevState) => new Map(prevState).set(name, value));\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      textAlign=\"center\"\r\n      style={{ height: '115vh', backgroundColor: 'rgb(33, 33, 33)' , marginTop: '-15vh' }}\r\n      verticalAlign=\"middle\"\r\n    >\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <CustomHeader  message=\"SEGWARE\" />\r\n        <CustomSubHeader message=\"CADASTRO\" />\r\n\r\n        <CustomSignUp\r\n          formData={formData}\r\n          onInputChange={handleInputChange}\r\n          onHandleSubmit={handleSubmit}\r\n          isValid={validate}\r\n        />\r\n        <CustomMessage>\r\n          Já possui conta ? <Link data-testid=\"btn-link\" to=\"/sign-in\">logar</Link>\r\n        </CustomMessage>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Header, Form, TextArea, Icon, Button, Popup } from 'semantic-ui-react';\r\nimport CustomSubHeader from '../components/CustomSubHeader';\r\n\r\nconst CustomFeed = ({\r\n  formData: { content },\r\n  onInputChange,\r\n  onHandleSubmit,\r\n  showUsername,\r\n  goAllContent,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Header style={{ marginTop: '20vh' }} color=\"red\" as=\"h2\">\r\n          SEU POST\r\n        </Header>\r\n        <Icon size=\"big\" name=\"user\" color=\"red\" style={{ marginTop: '3vh' }} />\r\n        <CustomSubHeader message={!showUsername ? 'username' : showUsername}>\r\n          {' '}\r\n        </CustomSubHeader>\r\n\r\n        <TextArea\r\n          placeholder=\"Escreva aqui\"\r\n          style={({ minHeight: 80 }, { marginTop: '6vh' })}\r\n          name=\"text\"\r\n          value={content}\r\n          onChange={(e) => onInputChange(e)}\r\n        />\r\n        <Popup\r\n          content={\r\n            <>\r\n              <code>Post enviado com sucesso</code>.\r\n            </>\r\n          }\r\n          on=\"click\"\r\n          popper={{ id: 'popper-container', style: { zIndex: 2000 } }}\r\n          trigger={\r\n            <Button\r\n              style={{ marginTop: '1vh' }}\r\n              type=\"submit\"\r\n              color=\"red\"\r\n              fluid\r\n              size=\"tiny\"\r\n              onClick={() => onHandleSubmit()}\r\n            >\r\n              Enviar\r\n            </Button>\r\n          }\r\n        />\r\n      </Form>\r\n      <Button\r\n        style={{ marginTop: '2vh' }}\r\n        inverted\r\n        color=\"red\"\r\n        onClick={() => goAllContent()}\r\n        animated=\"fade\"\r\n      >\r\n        <Button.Content visible>Ver todos os seus posts</Button.Content>\r\n        <Button.Content hidden>visualizar</Button.Content>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomFeed.propTypes = {\r\n  formData: PropTypes.shape({\r\n    content: PropTypes.string,\r\n  }).isRequired,\r\n  onInputChange: PropTypes.func.isRequired,\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n  showUsername: PropTypes.bool.isRequired,\r\n  goAllContent: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CustomFeed;\r\n","import axios from 'axios';\r\nimport { getToken } from '../helpers/localStorage';\r\n\r\nexport default async function fetchFeed(content) {\r\n  const requestUserUrl = 'https://segware-book-api.segware.io/api/feed';\r\n  const token = getToken();\r\n\r\n  const requestHeader = {\r\n    'Content-Type': 'application/json',\r\n    authorization: `Bearer ${token}`,\r\n  };\r\n\r\n  const requestBody = {\r\n    content,\r\n  };\r\n  try {\r\n    const res = await axios.post(requestUserUrl, requestBody, {\r\n      headers: requestHeader,\r\n    });\r\n    const { data } = res;\r\n    if (data) {\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n}\r\n","import React, { useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport CustomFeed from '../components/CustomFeed';\r\nimport feedService from '../service/feedService';\r\nimport { getUsername } from '../helpers/localStorage';\r\n\r\nfunction Feed() {\r\n  const history = useHistory();\r\n  const [formData, setFormData] = useState(new Map());\r\n  \r\n  const allContent = () => history.push('/feeds');\r\n\r\n  const handleInputChange = useCallback(({ target: { name, value } }) => {\r\n    setFormData((prevState) => new Map(prevState).set(name, value));\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    const content = formData.get('text');\r\n    await feedService(content)\r\n    // history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      textAlign=\"center\"\r\n      style={{ height: '105vh', backgroundColor: 'rgb(33, 33, 33)' }}\r\n      verticalAlign=\"top\"\r\n    >\r\n      <Grid.Column style={{ maxWidth: 600 }}>\r\n        <CustomFeed\r\n          formData={formData}\r\n          onHandleSubmit={handleSubmit}\r\n          onInputChange={handleInputChange}\r\n          showUsername={getUsername()}\r\n          goAllContent={allContent}\r\n          \r\n        />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","import axios from 'axios';\r\nimport { getToken } from '../helpers/localStorage';\r\n\r\nexport default async function fetchReactions(feedId, like, love) {\r\n  const requestUserUrl = 'https://segware-book-api.segware.io/api/reaction';\r\n  const token = getToken();\r\n\r\n  const requestHeader = {\r\n    'Content-Type': 'application/json',\r\n    authorization: `Bearer ${token}`,\r\n  };\r\n\r\n  const requestBody = {\r\n    feedId,\r\n    like,\r\n    love,\r\n  };\r\n  try {\r\n    const res = await axios.post(requestUserUrl, requestBody, {\r\n      headers: requestHeader,\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Item, Icon, Segment, Container, Divider } from 'semantic-ui-react';\r\nimport CustomSubHeader from './CustomSubHeader';\r\nimport fetchReactions from '../service/ReactionsService';\r\n\r\nconst CustomAllFeed = ({ index, item }) => {\r\n  const [markedStar, setMarkedmarkedStar] = useState(false);\r\n  const [markedHeart, setMarkedHeart] = useState(false);\r\n\r\n  const handleSubmitStar = () => {\r\n    setMarkedmarkedStar(!markedStar);\r\n    // cada veze que eu clico eu nego o estado e atualizo\r\n  };\r\n  const handleSubmitHeart = () => {\r\n    setMarkedHeart(!markedHeart);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Object.entries(item)\r\n      .slice(0, 15)\r\n      .map((i) => {\r\n        if (i[0] === 'likes' && i[1] === 0) {\r\n          console.log(i[0] ,'===', i[1]);\r\n          return setMarkedmarkedStar(false);\r\n        }\r\n        else if (i[0] === 'likes' && i[1] === 1) {\r\n          console.log(i[0] ,'===', i[1]);\r\n          return setMarkedmarkedStar(true);\r\n        }\r\n        else if (i[0] === 'loves' && i[1] === 0) {\r\n          console.log(i[0] ,'===', i[1]);\r\n          return setMarkedHeart(false);\r\n        }\r\n        else if (i[0] === 'loves' && i[1] === 1) {\r\n          return setMarkedHeart(true);\r\n        }\r\n      });\r\n  }, [setMarkedmarkedStar, setMarkedHeart, item]);\r\n\r\n  const markekedReaction = async (id) => {\r\n    await fetchReactions(id, markedStar, markedHeart);\r\n  };\r\n\r\n  return (\r\n    <Segment inverted>\r\n      <CustomSubHeader message={`TEXTO ${index + 1}`}></CustomSubHeader>\r\n      <Item.Group>\r\n        <Container fluid textAlign=\"justified\" style={{ color: 'whitesmoke' }}>\r\n          <p>{item.content}</p>\r\n        </Container>\r\n        <Divider />\r\n        <Item>\r\n          <Item.Content>\r\n            <Item.Extra>\r\n              <Icon\r\n                color={markedHeart ? 'red' : 'grey'}\r\n                size=\"big\"\r\n                style={{ marginRight: '30vh' }}\r\n                name=\"like\"\r\n                onClick={async () => {\r\n                  handleSubmitHeart();\r\n                  await markekedReaction(item.id);\r\n                }}\r\n                data-testid=\"like\"\r\n              />\r\n              <Icon\r\n                rotated={markedStar ? 'clockwise' : 'counterclockwise'}\r\n                color={markedStar ? 'yellow' : 'grey'}\r\n                size=\"big\"\r\n                name=\"favorite\"\r\n                // data-testid=\"favorite\"\r\n                onClick={async () => {\r\n                  handleSubmitStar();\r\n                  await markekedReaction(item.id);\r\n                }}\r\n              />\r\n            </Item.Extra>\r\n          </Item.Content>\r\n        </Item>\r\n      </Item.Group>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nCustomAllFeed.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CustomAllFeed;\r\n","import axios from 'axios';\r\nimport { getToken } from '../helpers/localStorage';\r\n\r\nexport default async function fetchAllFeed() {\r\n  const requestUserUrl = 'https://segware-book-api.segware.io/api/feeds';\r\n  const token = getToken();\r\n\r\n  const requestHeader = {\r\n    'Content-Type': 'application/json',\r\n    authorization: `Bearer ${token}`,\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(requestUserUrl, {\r\n      headers: requestHeader,\r\n    });\r\n    const { data } = res;\r\n    if (data) {\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport CustomAllFeed from '../components/CustomAllFeed';\r\nimport fetchAllFeed from '../service/allFeedService';\r\nimport CustomHeader from '../components/CustomHeader';\r\n\r\nfunction AllFeed() {\r\n  const [allContent, setAllContent] = useState();\r\n  useEffect(() => {\r\n    const allFeed = async () => {\r\n      const all = await fetchAllFeed();\r\n      \r\n      setAllContent(all);\r\n      return all;\r\n    };\r\n    allFeed();\r\n  }, [setAllContent]);\r\n\r\n  // const backLogin = () => history.push('/');\r\n\r\n  const renderContent = () => (\r\n    <Grid textAlign=\"center\" style={{ padding: '10vh' }}>\r\n      {!allContent\r\n        ? null\r\n        : allContent.slice(0, 20).map((item, index) => (\r\n            <Grid.Column key={index} width={5}>\r\n              <CustomAllFeed index={index} item={item} />\r\n            </Grid.Column>\r\n          ))}\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Grid style={{ backgroundColor: 'rgb(33, 33, 33)' }}>\r\n      <CustomHeader message=\"TODOS OS POSTS\" />\r\n      {!allContent ? null : renderContent()}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default AllFeed;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst CustomForgotPassword = ({\r\n  formData: { username },\r\n  onInputChange,\r\n  onHandleSubmit,\r\n  isValid,\r\n  showPassword,\r\n}) => {\r\n  return (\r\n    <Form size=\"large\">\r\n      <Segment stacked style={{ backgroundColor: 'rgb(33, 33, 33)' }}>\r\n        <Form.Input\r\n          fluid\r\n          icon=\"user\"\r\n          iconPosition=\"left\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          name=\"username\"\r\n          onChange={(e) => onInputChange(e)}\r\n        />\r\n        <Form.Input\r\n          fluid\r\n          icon=\"lock\"\r\n          iconPosition=\"left\"\r\n          value={!showPassword ? ' ' : showPassword}\r\n          loading={!showPassword ? true : false}\r\n          placeholder=\"Password\"\r\n          data-testid=\"password-input\"\r\n        />\r\n        <Button\r\n          disabled={isValid()}\r\n          color=\"red\"\r\n          fluid\r\n          size=\"large\"\r\n          onClick={() => onHandleSubmit()}\r\n        >\r\n          Enviar\r\n        </Button>\r\n      </Segment>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCustomForgotPassword.propTypes = {\r\n  formData: PropTypes.shape({\r\n    username: PropTypes.string,\r\n    showPassword: PropTypes.bool,\r\n  }).isRequired,\r\n  onInputChange: PropTypes.func.isRequired,\r\n  isValid: PropTypes.func.isRequired,\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CustomForgotPassword;\r\n","import axios from 'axios';\r\n\r\nexport default async function fetchForgotPassword(username) {\r\n  const requestUsername = `https://segware-book-api.segware.io/api/forgot-password/${username}`;\r\n  const requestHeader = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  \r\n  try {\r\n    const res = await axios.get(requestUsername, requestHeader);\r\n    const { data } = res;\r\n    if (data) {\r\n      return data.password;\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport CustomMessage from '../components/CustomMessage';\r\nimport CustomHeader from '../components/CustomHeader';\r\nimport CustomForgotPassword from '../components/CustomForgotPassword';\r\nimport CustomSubHeader from '../components/CustomSubHeader';\r\nimport fetchForgotPassword from '../service/forgotPasswordService';\r\n\r\nfunction ForgotPassword() {\r\n  const [formData, setFormData] = useState(new Map());\r\n  const [inputEnable, setInputEnable] = useState('');\r\n\r\n  const validate = () => {\r\n    const username = formData.get('username');\r\n    if (!username) {\r\n        return true;\r\n      }\r\n    \r\n    return false;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const username = formData.get('username');\r\n    const password = await fetchForgotPassword(username);\r\n    setInputEnable(password);\r\n    return password;\r\n  };\r\n\r\n  const handleInputChange = useCallback(({ target: { name, value } }) => {\r\n    setFormData((prevState) => new Map(prevState).set(name, value));\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      textAlign=\"center\"\r\n      style={{ height: '115vh', backgroundColor: 'rgb(33, 33, 33)', marginTop: '-15vh'}}\r\n      verticalAlign=\"middle\"\r\n    >\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <CustomHeader message=\"SEGWARE\" />\r\n        <CustomSubHeader message=\"RECUPEAR SENHA\" />\r\n\r\n        <CustomForgotPassword\r\n          formData={formData}\r\n          onInputChange={handleInputChange}\r\n          onHandleSubmit={handleSubmit}\r\n          isValid={validate}\r\n          showPassword={inputEnable}\r\n        />\r\n        <CustomMessage>\r\n          Já possui conta ? <Link to=\"/sign-in\">logar</Link>\r\n        </CustomMessage>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst isAuthenticated = () => localStorage.getItem('token');\r\n\r\nconst PrivateRouter = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    { ...rest }\r\n    render={ (props) => (isAuthenticated() ? (\r\n      <Component { ...props } />\r\n    ) : (\r\n      <Redirect to={ { pathname: '/sign-in', state: { from: props.location } } } />\r\n    )) }\r\n  />\r\n);\r\n\r\nPrivateRouter.propTypes = {\r\n  component: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PrivateRouter;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SignIn from './pages/SignIn';\r\nimport SignUp from './pages/SignUp';\r\nimport Feed from './pages/Feed';\r\nimport AllFeed from './pages/AllFeed';\r\nimport ForgotPassword from './pages/ForgotPassword';\r\nimport PrivateRouter from './PrivateRouter';\r\n\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route exact path=\"/sign-up\" component={ SignUp } />\r\n    <Route exact path=\"/sign-in\" component={ SignIn } />\r\n    <Route exact path=\"/\" component={ SignIn } />\r\n    <Route exact path=\"/forgot-password\" component={ ForgotPassword } />\r\n    <PrivateRouter exact path=\"/feed\" component={ Feed } />\r\n    <PrivateRouter exact path=\"/feeds\" component={ AllFeed } />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import { createContext } from 'react';\r\n\r\nconst CentralContext = createContext();\r\n\r\nexport default CentralContext;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport Context from './Context';\r\n\r\nfunction CentralContextProvider({ children }) {\r\n  const [isUsernameExist, setIsUsernameExist] = useState(false);\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={ {\r\n        isUsernameExist,\r\n        setIsUsernameExist\r\n      } }\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nCentralContextProvider.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default CentralContextProvider;\r\n","import React from 'react';\nimport Routes from './Routes';\nimport CentralContextProvider from './context/CentralContextProvider';\n\n\nconst App = () => (\n  <CentralContextProvider>\n    <Routes />\n  </CentralContextProvider>);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}